{"cells":[{"cell_type":"code","source":["pip install streamlit"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"TUO1NqlDHDr-","executionInfo":{"status":"ok","timestamp":1757062922618,"user_tz":-480,"elapsed":13229,"user":{"displayName":"VOON LOONG CHAM","userId":"16304965221063417838"}},"outputId":"ba408550-9634-49ee-e0f8-0706bac90597"},"execution_count":4,"outputs":[{"output_type":"stream","name":"stdout","text":["Collecting streamlit\n","  Downloading streamlit-1.49.1-py3-none-any.whl.metadata (9.5 kB)\n","Requirement already satisfied: altair!=5.4.0,!=5.4.1,<6,>=4.0 in /usr/local/lib/python3.12/dist-packages (from streamlit) (5.5.0)\n","Requirement already satisfied: blinker<2,>=1.5.0 in /usr/local/lib/python3.12/dist-packages (from streamlit) (1.9.0)\n","Requirement already satisfied: cachetools<7,>=4.0 in /usr/local/lib/python3.12/dist-packages (from streamlit) (5.5.2)\n","Requirement already satisfied: click<9,>=7.0 in /usr/local/lib/python3.12/dist-packages (from streamlit) (8.2.1)\n","Requirement already satisfied: numpy<3,>=1.23 in /usr/local/lib/python3.12/dist-packages (from streamlit) (2.0.2)\n","Requirement already satisfied: packaging<26,>=20 in /usr/local/lib/python3.12/dist-packages (from streamlit) (25.0)\n","Requirement already satisfied: pandas<3,>=1.4.0 in /usr/local/lib/python3.12/dist-packages (from streamlit) (2.2.2)\n","Requirement already satisfied: pillow<12,>=7.1.0 in /usr/local/lib/python3.12/dist-packages (from streamlit) (11.3.0)\n","Requirement already satisfied: protobuf<7,>=3.20 in /usr/local/lib/python3.12/dist-packages (from streamlit) (5.29.5)\n","Requirement already satisfied: pyarrow>=7.0 in /usr/local/lib/python3.12/dist-packages (from streamlit) (18.1.0)\n","Requirement already satisfied: requests<3,>=2.27 in /usr/local/lib/python3.12/dist-packages (from streamlit) (2.32.4)\n","Requirement already satisfied: tenacity<10,>=8.1.0 in /usr/local/lib/python3.12/dist-packages (from streamlit) (8.5.0)\n","Requirement already satisfied: toml<2,>=0.10.1 in /usr/local/lib/python3.12/dist-packages (from streamlit) (0.10.2)\n","Requirement already satisfied: typing-extensions<5,>=4.4.0 in /usr/local/lib/python3.12/dist-packages (from streamlit) (4.15.0)\n","Requirement already satisfied: watchdog<7,>=2.1.5 in /usr/local/lib/python3.12/dist-packages (from streamlit) (6.0.0)\n","Requirement already satisfied: gitpython!=3.1.19,<4,>=3.0.7 in /usr/local/lib/python3.12/dist-packages (from streamlit) (3.1.45)\n","Collecting pydeck<1,>=0.8.0b4 (from streamlit)\n","  Downloading pydeck-0.9.1-py2.py3-none-any.whl.metadata (4.1 kB)\n","Requirement already satisfied: tornado!=6.5.0,<7,>=6.0.3 in /usr/local/lib/python3.12/dist-packages (from streamlit) (6.4.2)\n","Requirement already satisfied: jinja2 in /usr/local/lib/python3.12/dist-packages (from altair!=5.4.0,!=5.4.1,<6,>=4.0->streamlit) (3.1.6)\n","Requirement already satisfied: jsonschema>=3.0 in /usr/local/lib/python3.12/dist-packages (from altair!=5.4.0,!=5.4.1,<6,>=4.0->streamlit) (4.25.1)\n","Requirement already satisfied: narwhals>=1.14.2 in /usr/local/lib/python3.12/dist-packages (from altair!=5.4.0,!=5.4.1,<6,>=4.0->streamlit) (2.3.0)\n","Requirement already satisfied: gitdb<5,>=4.0.1 in /usr/local/lib/python3.12/dist-packages (from gitpython!=3.1.19,<4,>=3.0.7->streamlit) (4.0.12)\n","Requirement already satisfied: python-dateutil>=2.8.2 in /usr/local/lib/python3.12/dist-packages (from pandas<3,>=1.4.0->streamlit) (2.9.0.post0)\n","Requirement already satisfied: pytz>=2020.1 in /usr/local/lib/python3.12/dist-packages (from pandas<3,>=1.4.0->streamlit) (2025.2)\n","Requirement already satisfied: tzdata>=2022.7 in /usr/local/lib/python3.12/dist-packages (from pandas<3,>=1.4.0->streamlit) (2025.2)\n","Requirement already satisfied: charset_normalizer<4,>=2 in /usr/local/lib/python3.12/dist-packages (from requests<3,>=2.27->streamlit) (3.4.3)\n","Requirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.12/dist-packages (from requests<3,>=2.27->streamlit) (3.10)\n","Requirement already satisfied: urllib3<3,>=1.21.1 in /usr/local/lib/python3.12/dist-packages (from requests<3,>=2.27->streamlit) (2.5.0)\n","Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.12/dist-packages (from requests<3,>=2.27->streamlit) (2025.8.3)\n","Requirement already satisfied: smmap<6,>=3.0.1 in /usr/local/lib/python3.12/dist-packages (from gitdb<5,>=4.0.1->gitpython!=3.1.19,<4,>=3.0.7->streamlit) (5.0.2)\n","Requirement already satisfied: MarkupSafe>=2.0 in /usr/local/lib/python3.12/dist-packages (from jinja2->altair!=5.4.0,!=5.4.1,<6,>=4.0->streamlit) (3.0.2)\n","Requirement already satisfied: attrs>=22.2.0 in /usr/local/lib/python3.12/dist-packages (from jsonschema>=3.0->altair!=5.4.0,!=5.4.1,<6,>=4.0->streamlit) (25.3.0)\n","Requirement already satisfied: jsonschema-specifications>=2023.03.6 in /usr/local/lib/python3.12/dist-packages (from jsonschema>=3.0->altair!=5.4.0,!=5.4.1,<6,>=4.0->streamlit) (2025.4.1)\n","Requirement already satisfied: referencing>=0.28.4 in /usr/local/lib/python3.12/dist-packages (from jsonschema>=3.0->altair!=5.4.0,!=5.4.1,<6,>=4.0->streamlit) (0.36.2)\n","Requirement already satisfied: rpds-py>=0.7.1 in /usr/local/lib/python3.12/dist-packages (from jsonschema>=3.0->altair!=5.4.0,!=5.4.1,<6,>=4.0->streamlit) (0.27.1)\n","Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.12/dist-packages (from python-dateutil>=2.8.2->pandas<3,>=1.4.0->streamlit) (1.17.0)\n","Downloading streamlit-1.49.1-py3-none-any.whl (10.0 MB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m10.0/10.0 MB\u001b[0m \u001b[31m63.7 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hDownloading pydeck-0.9.1-py2.py3-none-any.whl (6.9 MB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m6.9/6.9 MB\u001b[0m \u001b[31m85.9 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hInstalling collected packages: pydeck, streamlit\n","Successfully installed pydeck-0.9.1 streamlit-1.49.1\n"]}]},{"cell_type":"code","source":["\n","import streamlit as st\n","from PIL import Image\n","import numpy as np\n","import tensorflow as tf\n","import io\n","\n","# --- Configuration ---\n","# Set the page configuration for the Streamlit app.\n","# This should be the first Streamlit command in your script.\n","st.set_page_config(\n","    page_title=\"Mushroom Classifier\",\n","    page_icon=\"🍄\",\n","    layout=\"centered\",\n","    initial_sidebar_state=\"auto\",\n",")\n","\n","# --- Model Loading and Class Definitions ---\n","\n","# IMPORTANT: Make sure your model file is in the same directory as this script,\n","# or provide the full path to the file.\n","@st.cache_resource\n","def load_model():\n","    \"\"\"Loads the trained TensorFlow model.\"\"\"\n","    # Replace 'your_mushroom_model.h5' with the actual filename of your model.\n","    try:\n","        model = tf.keras.models.load_model('mushroom_cnn.h5')\n","        return model\n","    except Exception as e:\n","        st.error(f\"Error loading model: {e}\")\n","        return None\n","\n","# IMPORTANT: Define the class names your model was trained on.\n","# The order MUST exactly match the output of your model's prediction.\n","CLASS_NAMES = [\n","    \"amanita augusta\",\n","    \"Amanita cirtina\",\n","    \"agaricus xanthodermus\",\n","    \"Hypholama lateritium\",\n","    \"lactarius torminosus\",\n","    \"flammulina velutipes\",\n","    \"boletus edulis\",\n","    \"clitocybe nuda\",\n","    \"armillaria mellea\",\n","    \"leccinum scabrum\",\n","]\n","\n","# IMPORTANT: Define the toxicity information for each of your classes.\n","TOXICITY_INFO = {\n","    \"amanita augusta\": \"toxic\",\n","    \"Amanita cirtina\": \"toxic\",\n","    \"agaricus xanthodermus\": \"toxic\",\n","    \"Hypholama lateritium\": \"toxic\",\n","    \"lactarius torminosus\": \"toxic\",\n","    \"flammulina velutipes\": \"safe\",\n","    \"boletus edulis\": \"safe\",\n","    \"clitocybe nuda\": \"safe\",\n","    \"armillaria mellea\": \"safe\",\n","    \"leccinum scabrum\": \"safe\",\n","}\n","\n","# --- Main Application ---\n","\n","def main():\n","    \"\"\"\n","    The main function that runs the Streamlit application.\n","    \"\"\"\n","    # Load the (mock) model\n","    model = load_model()\n","\n","    if model is None:\n","        st.stop() # Don't run the app if the model failed to load\n","\n","    # --- UI Components ---\n","    st.title(\"🍄 Mushroom Species & Toxicity Classifier\")\n","    st.markdown(\"\"\"\n","        Welcome! Upload an image of a mushroom, and this application will predict its species and whether it's edible or poisonous.\n","\n","        **Disclaimer:** This is a prototype and for educational purposes only. **Do not eat any mushroom based on this classification.** Always consult with an expert.\n","    \"\"\")\n","\n","    # Image uploader\n","    uploaded_file = st.file_uploader(\n","        \"Choose a mushroom image...\",\n","        type=[\"jpg\", \"jpeg\", \"png\"]\n","    )\n","\n","    if uploaded_file is not None:\n","        # To read file as bytes:\n","        bytes_data = uploaded_file.getvalue()\n","\n","        # Display the uploaded image\n","        st.image(bytes_data, caption='Uploaded Image.', use_column_width=True)\n","        st.write(\"\") # Add a little space\n","\n","        # --- Image Preprocessing and Prediction ---\n","        st.write(\"Classifying...\")\n","\n","        with st.spinner('Analyzing the mushroom...'):\n","            try:\n","                # Open the image using PIL\n","                image = Image.open(io.BytesIO(bytes_data)).convert('RGB')\n","\n","                # IMPORTANT: Change (224, 224) to your model's expected input size.\n","                target_size = (224, 224)\n","                image = image.resize(target_size)\n","\n","                # Convert the image to a numpy array and normalize it\n","                image_array = np.array(image) / 255.0\n","\n","                # Add a batch dimension\n","                image_batch = np.expand_dims(image_array, axis=0)\n","\n","                # Make a prediction\n","                predictions = model.predict(image_batch)\n","                predicted_index = np.argmax(predictions[0])\n","                confidence = np.max(predictions[0])\n","\n","                # Get the results\n","                predicted_species = CLASS_NAMES[predicted_index]\n","                toxicity = TOXICITY_INFO.get(predicted_species, \"Unknown\")\n","\n","                # --- Display Results ---\n","                st.success(\"Classification Complete!\")\n","                st.markdown(f\"### Predicted Species: **{predicted_species}**\")\n","                st.markdown(f\"### Confidence: **{confidence:.2%}**\")\n","\n","                if \"Poisonous\" in toxicity or \"Psychoactive\" in toxicity:\n","                    st.error(f\"### Toxicity: **{toxicity}** ☠️\")\n","                else:\n","                    st.success(f\"### Toxicity: **{toxicity}** ✅\")\n","\n","                st.info(\"Remember to always be cautious and consult a mycologist before consuming any wild mushroom.\")\n","\n","            except Exception as e:\n","                st.error(f\"An error occurred during processing: {e}\")\n","\n","# Entry point for the script\n","if __name__ == '__main__':\n","    main()"],"outputs":[{"output_type":"stream","name":"stderr","text":["2025-09-05 09:03:53.157 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n","2025-09-05 09:03:53.166 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n","2025-09-05 09:03:53.168 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n","2025-09-05 09:03:53.170 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n","2025-09-05 09:03:53.172 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n","2025-09-05 09:03:53.173 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n","2025-09-05 09:03:53.174 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n","2025-09-05 09:03:53.175 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n","2025-09-05 09:03:53.175 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n","2025-09-05 09:03:53.176 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n","2025-09-05 09:03:53.177 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n","2025-09-05 09:03:53.177 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n","2025-09-05 09:03:53.178 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n","2025-09-05 09:03:53.179 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n"]}],"execution_count":8,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Gvh24VsAFJL7","executionInfo":{"status":"ok","timestamp":1757063034053,"user_tz":-480,"elapsed":110,"user":{"displayName":"VOON LOONG CHAM","userId":"16304965221063417838"}},"outputId":"c353c4a3-b421-4eb6-e67e-b893d2c7c8bf"}}],"metadata":{"colab":{"provenance":[]},"kernelspec":{"display_name":"Python 3","name":"python3"}},"nbformat":4,"nbformat_minor":0}